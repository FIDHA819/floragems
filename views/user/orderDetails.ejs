<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Detail</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        /* Custom styles */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f7fa;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px;
        }

        .content-main {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .content-header {
            margin-bottom: 30px;
            border-bottom: 2px solid #eee;
            padding-bottom: 15px;
        }

        .content-header h2 {
            font-size: 28px;
            font-weight: bold;
            color: #333;
        }

        .order-info-wrap {
            background-color: #fafafa;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 1px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        .order-info-wrap .icontext {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .icontext .icon {
            margin-right: 15px;
            font-size: 24px;
            color: #3885d6;
        }

        .table th, .table td {
            text-align: center;
            vertical-align: middle;
        }

        .table-responsive {
            margin-top: 20px;
        }

        .btn-sm {
            background-color: #3885d6;
            color: white;
            padding: 5px 15px;
            border-radius: 5px;
            text-decoration: none;
        }

        .btn-sm:hover {
            background-color: #276cb0;
        }

        .order-status-select {
            width: 100%;
            padding: 5px;
            font-size: 14px;
        }

        .order-details .text {
            margin-bottom: 10px;
        }

        .order-details h6 {
            font-size: 20px;
            font-weight: bold;
        }

        .order-details p {
            font-size: 14px;
            color: #555;
        }

        .order-details .order-id {
            font-size: 16px;
            color: #888;
        }

        .order-details .order-date {
            font-size: 14px;
            color: #777;
        }

        .table th, .table td {
            padding: 12px 15px;
        }
        .content-header {
    margin-bottom: 30px;
    border-bottom: 2px solid #eee;
    padding-bottom: 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.cancel-order-btn {
    background-color: #f1c40f; /* Yellow color */
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    text-decoration: none;
    font-size: 16px;
    margin-left: auto; /* This ensures the button is pushed to the right */
}

.cancel-order-btn:hover {
    background-color: #f39c12; /* Darker yellow on hover */
}

    </style>
</head>
<body>

    <main class="container">
        <section class="content-main">
            <div class="content-header">
                <h2 class="content-title card-title">Order Detail</h2>
                <% if (orders.orderStatus !== 'Cancelled') { %>
                    <a href="javascript:void(0);" id="cancelOrderButton" class="cancel-order-btn" 
                       onclick="confirmCancelOrder('<%= orders.orderId %>', '<%= orders.paymentMethod %>')">
                       Cancel Order
                    </a>
                <% } %>
                
             
            </div>
                <p class="order-id">Details for Order ID: <%= orders.orderId %></p>
                <p class="order-date">
                    Order Date: <%= orders.createdAt ? orders.createdAt.toLocaleString() : 'N/A' %>
                </p>
                
            </div>
    
            <div class="card-body">
                <!-- Customer Information -->
                <div class="row mb-4 order-info-wrap">
                    <div class="col-md-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-primary-light">
                                <i class="material-icons text-primary">person</i>
                            </span>
                            <div class="text">
                                <h6>Customer</h6>
                                <% if (address && address.name && address.phone) { %>
                                    <p><%= address.name %> <br> <%= address.phone %></p>
                                <% } else { %>
                                    <p>No address available.</p>
                                <% } %>
                            </div>
                        </article>
                    </div>
    
                    <!-- Order Information -->
                    <div class="col-md-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-primary-light">
                                <i class="material-icons text-primary">local_shipping</i>
                            </span>
                            <div class="text">
                                <h6>Order Info</h6>
                                <p>
                                    <span id="paymentMethod" data-payment-method="<%= orders.paymentMethod %>">Pay method: <%= orders.paymentMethod %></span><br>

                                    

                                    Order Status: <%= orders.orderStatus %> <br> <!-- Order Status -->
                                    Payment Status: <%= orders.paymentStatus %> <br> <!-- Payment Status -->
                                    Grand Total: ₹<%= totalGrant.toLocaleString() %> <br>
                                    Shipping Cost: ₹<%= shippingCost.toLocaleString() %> <br>
                                    Discount: ₹<%= discount.toLocaleString() %> <br> <!-- Discount -->
                                    Final Amount: ₹<%= finalAmount.toLocaleString() %> <br> <!-- Final Amount -->
                                    <% if (PaidAmount !== null) { %>
                                        <% if (orders.paymentStatus === "Refunded") { %>
                                            Refund Amount: ₹<%= PaidAmount.toLocaleString() %> <br>
                                        <% } else { %>
                                            Paid Amount: ₹<%= PaidAmount.toLocaleString() %> <br>
                                        <% } %>
                                    <% } %>
                                    
                                </p>
                                
                            </div>
                        </article>
                    </div>
    
                    <!-- Delivery Information -->
                    <div class="col-md-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-primary-light">
                                <i class="material-icons text-primary">place</i>
                            </span>
                            <div class="text">
                                <h6>Deliver To</h6>
                                <% if (address) { %>
                                    <p>
                                        Address: <%= address.landMark %>, <%= address.city %> <br>
                                        <%= address.state %>, <%= address.addressType %> <br>
                                        Pincode: <%= address.pincode %> <br>
                                        Phone: <%= address.phone %>, Alt Phone: <%= address.altPhone %>
                                    </p>
                                <% } else { %>
                                    <p>No address available.</p>
                                <% } %>
    
                                <% if (orders.status === "Delivered") { %>
                                    <a href="/downloadInvoice/<%= orders._id %>" class="btn btn-sm">Download Invoice</a>
                                <% } %>
                            </div>
                        </article>
                    </div>
                </div>
    
                <!-- Order Details Table -->
                <div class="row">
                    <div class="col-lg">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr class="text-center">
                                        <th width="30%">Product</th>
                                        <th width="20%">Name</th>
                                        <th width="10%">Unit Price</th>
                                        <th width="10%">Quantity</th>
                                        <th width="10%">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (orders.orderedItems && orders.orderedItems.length > 0) { %>
                                        <% orders.orderedItems.forEach((item) => { %>
                                            <tr>
                                                <td class="text-center">
                                                    <div class="info">
                                                        <h6><%= item.product.productName %></h6>
                                                        <p><%= item.product.description %></p>
                                                    </div>
                                                </td>
                                                <td class="text-center"><%= item.product.productName %></td>
                                                <td class="text-center">₹<%= item.price.toFixed(2) %></td>
                                                <td class="text-center"><%= item.quantity %></td>
                                                <td class="text-center">₹<%= (item.quantity * item.price).toFixed(2) %></td>
                                            </tr>
                                        <% }); %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="5" class="text-center">No products found in the order.</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
    
                <div class="text-center mt-4">
                    <a href="/" class="btn btn-primary">
                        <i class="fa fa-shopping-cart"></i> Continue Shopping with Us
                    </a>
                </div>
            </div>
        </section>
        <% if (orders.orderStatus=== "Delivered") { %>
            <button class="btn btn-warning" id="returnOrderButton" data-bs-toggle="modal" data-bs-target="#returnModal">
                Request Return
            </button>
        <% } %>
        
        <!-- Modal for Return Reason -->
        <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="returnModalLabel">Request Return</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Please provide a reason for returning this order:</p>
                        <textarea id="returnReason" class="form-control" rows="4" placeholder="Enter your reason here..."></textarea>
                        <small class="text-muted">Returns are approved only for orders delivered within the last 5 days.</small>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="submitReturnRequest('<%= orders.orderId %>')">Submit Request</button>
                    </div>
                </div>
            </div>
        </div>
    </main>
    

<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<!-- jQuery (required for Bootstrap's JavaScript plugins) -->
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>

<!-- Bootstrap JS (requires Popper.js) -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>


<script>
    function handleDropdownChange(selectElement) {
    const selectedValue = selectElement.value;
    const orderId = document.getElementById("orderId").value; // Ensure orderId is set
    const paymentMethod = document.getElementById("paymentMethod").getAttribute("data-payment-method");

    if (selectedValue === "cancel") {
        confirmCancelOrder(orderId, paymentMethod);
    } else if (selectedValue === "returnrequest") {
        returnRequestOrder(orderId);
    }
}
function confirmCancelOrder(orderId, paymentMethod) {
    console.log("Payment Method:", paymentMethod); // Debug log

    Swal.fire({
        title: 'Confirm Cancel Order',
        text: 'Are you sure you want to cancel this order?',
        icon: 'warning',
        showCancelButton: true,
        cancelButtonText: 'No, keep it',
        confirmButtonText: 'Yes, cancel it!',
        input: 'textarea',
        inputPlaceholder: 'Enter the reason for cancellation (optional)',
        inputAttributes: {
            'aria-label': 'Type your reason here',
        },
        showLoaderOnConfirm: true,
        preConfirm: (reason) => {
            if (!reason) {
                reason = "No reason provided";
            }

            return $.ajax({
                url: '/cancelOrder',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    orderId: orderId,
                    reason: reason,
                    paymentMethod: paymentMethod,
                }),
            })
                .then((response) => {
                    // Check if the response message contains success
                    if (response.message && response.message.includes("Order cancelled successfully")) {
                        return response;
                    } else {
                        throw new Error(response.message || "Cancellation failed");
                    }
                })
                .catch((error) => {
                    Swal.showValidationMessage(`Request failed: ${error.message}`);
                });
        },
        allowOutsideClick: () => !Swal.isLoading(),
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire('Cancelled!', 'Your order has been cancelled successfully.', 'success').then(() => {
                // Hide the cancel button
                const cancelButton = document.getElementById('cancelOrderButton');
                if (cancelButton) {
                    cancelButton.style.display = 'none';
                }
                // Optionally reload the page or update the UI
                window.location.reload();
            });
        } else if (result.dismiss === Swal.DismissReason.cancel) {
            Swal.fire('Cancelled', 'Your order remains active.', 'info');
        }
    });
}

function submitReturnRequest(orderId) {
    const reason = document.getElementById("returnReason").value.trim();

    if (!reason) {
        Swal.fire("Error", "Please provide a reason for the return.", "error");
        return;
    }

    $.ajax({
        url: "/requestReturn",
        method: "POST",
        contentType: "application/json",
        data: JSON.stringify({ orderId: orderId, reason: reason }),
        success: (response) => {
            if (response.message === "Return request sent successfully.") {
                Swal.fire("Success", "Your return request has been submitted.", "success").then(() => {
                    window.location.reload();
                });

                // Notify admin (server handles the logic for notifications)
                $.ajax({
                    url: "/notifyAdmin",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        orderId: orderId,
                        notificationType: "Return Request",
                        message: `A return request has been submitted for Order ID: ${orderId}. Reason: ${reason}`,
                    }),
                    success: (adminResponse) => {
                        console.log("Admin notified:", adminResponse.message);
                    },
                    error: (adminError) => {
                        console.error("Failed to notify admin:", adminError.responseText);
                    },
                });
            } else {
                Swal.fire("Error", response.message || "Failed to submit return request.", "error");
            }
        },
        error: (error) => {
            Swal.fire("Error", error.responseText || "An unexpected error occurred.", "error");
        },
    });
}

</script>

</body>
</html>
