<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Checkout page</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="Free HTML Templates" name="keywords">
    <meta content="Free HTML Templates" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



    <!-- Libraries Stylesheet -->
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="css/style.css" rel="stylesheet">
    <script> $(document).ready(function () {
        // Handle the checkbox toggle for shipping address
        $('#shipto').change(function () {
            if ($(this).is(':checked')) {
                $('#shipping-address').collapse('show');
            } else {
                $('#shipping-address').collapse('hide');
            }
        });
    });
</script>
    <style>
        /* General Styles for Cleaner Writing */
body {
    font-family: 'Arial', sans-serif;
    line-height: 1.6;
}

h4, h5, h3 {
    margin-bottom: 10px;
    font-weight: bold;
    color: #333;
}

p, ul, li {
    margin: 0;
    padding: 0;
}

table {
    width: 100%;
    margin-top: 15px;
    border-collapse: collapse;
}

th, td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
    font-size: 14px;
    color: #555;
}

th {
    background-color: #f4f4f4;
    font-weight: bold;
}

table td span {
    font-weight: bold;
}

table td img {
    max-width: 60px;
    height: auto;
}

/* Styling for Coupon Section */
#inputCoupon {
    padding: 10px;
    font-size: 14px;
}

#applyButton {
    padding: 10px 15px;
    font-size: 14px;
}

.coupon-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.coupon-details {
    font-size: 14px;
}

.coupon-name {
    font-weight: bold;
}

.use-button, .cancel-button {
    font-size: 14px;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
}

.use-button {
    background-color: #28a745;
    color: #fff;
    border: none;
}

.use-button:hover {
    background-color: #218838;
}

.cancel-button {
    background-color: #dc3545;
    color: #fff;
    border: none;
    display: none;
}

.cancel-button:hover {
    background-color: #c82333;
}

/* Table Styling */
.order-details-table td,
.order-details-table th {
    padding: 12px;
    text-align: left;
}

.order-details-table tr:nth-child(even) {
    background-color: #f9f9f9;
}

.order-details-table tr:hover {
    background-color: #f1f1f1;
}

/* Delete Button Styling */
.order-details-table td .fi-rs-trash {
    color: #dc3545;
    font-size: 18px;
    cursor: pointer;
    transition: color 0.3s ease;
}

.order-details-table td .fi-rs-trash:hover {
    color: #c82333;
}

/* Payment Method Section */
.custom-control-label {
    font-size: 14px;
    color: #333;
}

.custom-control-input:checked ~ .custom-control-label {
    font-weight: bold;
}

.card-body .form-group {
    margin-bottom: 15px;
}

.card-footer .btn {
    font-size: 16px;
    padding: 12px;
    background-color: #007bff;
    color: #fff;
    border-radius: 5px;
    width: 100%;
    text-align: center;
}

.card-footer .btn:hover {
    background-color: #0056b3;
}

/* Adjusting for Order Summary and Payment Method */
.table tbody tr {
    margin-bottom: 15px;
}

.table td, .table th {
    padding: 15px;
}

.table th {
    background-color: #f7f7f7;
    font-weight: bold;
}

.table td {
    font-size: 16px;
    color: #555;
}

.table td span {
    font-weight: bold;
}

/* Button to Place Order */
button[type="button"].btn {
    background-color: #007bff;
    color: #fff;
    padding: 12px 20px;
    border-radius: 5px;
    font-size: 16px;
    border: none;
}

button[type="button"].btn:hover {
    background-color: #0056b3;
}

/* Style for buttons */
.btn-primary {
    background-color: #007bff;
    border-color: #007bff;
    padding: 10px 20px;
    text-decoration: none;
    color: white;
    border-radius: 5px;
}

.btn-primary:hover {
    background-color: #0056b3;
}

.btn-secondary {
    background-color: #6c757d;
    border-color: #6c757d;
    padding: 10px 20px;
    text-decoration: none;
    color: white;
    border-radius: 5px;
}

.btn-secondary:hover {
    background-color: #5a6268;
}

    </style>
</head>

<body>

<!-- 
<- Page Header Start --> 
    <div class="container-fluid bg-secondary mb-5">
        <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
            <h1 class="font-weight-semi-bold text-uppercase mb-3">Checkout</h1>
            <div class="d-inline-flex">
                <p class="m-0"><a href="">Home</a></p>
                <p class="m-0 px-2">-</p>
                <p class="m-0">Checkout</p>
            </div>
        </div>
    </div>
    <!-- Page Header End -->

    <!-- Checkout Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <!-- Left Column: Billing and Shipping Address Forms -->
        <div class="col-lg-4">
            <div class="mb-4">
                <% if (locals.userAddress && userAddress.address.length > 0) { %>
                    <!-- Show Latest Address -->
                    <div class="col-lg-12">
                        <div class="card mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" id="addressRadio<%= userAddress.address[0]._id %>" name="selectedAddress" value="<%= userAddress.address[0]._id %>">
                                <label class="form-check-label" for="addressRadio<%= userAddress.address[0]._id %>">Select Address</label>
                            </div>
                            <div class="card-header">
                                <h5 class="mb-0"><%= userAddress.address[0].addressType %></h5>
                            </div>
                            <div class="card-body">
                                <address>
                                    <%= userAddress.address[0].name %><br />
                                    <%= userAddress.address[0].city %>,<br />
                                    <%= userAddress.address[0].landMark %><br />
                                    <%= userAddress.address[0].state %>
                                </address>
                                <p><%= userAddress.address[0].pincode %></p>
                                <p><%= userAddress.address[0].phone %></p>
                                <p><%= userAddress.address[0].altPhone %></p>
                                <div class="d-flex justify-content-between">
                                    <a href="/editAddress?id=<%= userAddress.address[0]._id %>" class="btn btn-small">Edit</a>
                                    <a href="/deleteAddress?id=<%= userAddress.address[0]._id %>" class="btn btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                                </div>
                            </div>
                        </div>
                    </div>
        
                    <!-- Pagination for Addresses -->
                    <div class="col-md-12 form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="shipto" data-toggle="collapse" data-target="#shipping-address">
                            <label class="custom-control-label" for="shipto">Ship to a different address</label>
                        </div>
                    </div>
        
                    <div id="shipping-address" class="collapse">
                        <!-- Pagination for displaying multiple addresses -->
                        <div id="address-pagination">
                            <% userAddress.address.slice(1).forEach((address, index) => { %>
                            <div class="col-lg-12">
                                <div class="card mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" id="addressRadio<%= address._id %>" name="selectedAddress" value="<%= address._id %>">
                                        <label class="form-check-label" for="addressRadio<%= address._id %>">Select Address</label>
                                    </div>
                                    <div class="card-header">
                                        <h5 class="mb-0"><%= address.addressType %></h5>
                                    </div>
                                    <div class="card-body">
                                        <address>
                                            <%= address.name %><br />
                                            <%= address.city %>,<br />
                                            <%= address.landMark %><br />
                                            <%= address.state %>
                                        </address>
                                        <p><%= address.pincode %></p>
                                        <p><%= address.phone %></p>
                                        <p><%= address.altPhone %></p>
                                        <div class="d-flex justify-content-between">
                                            <a href="/editAddress?id=<%= address._id %>" class="btn btn-small">Edit</a>
                                            <a href="/deleteAddress?id=<%= address._id %>" class="btn btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <% }) %>
                        </div>
        
                        <!-- Pagination Controls -->
                        <div class="pagination-controls">
                            <button id="prevPage" onclick="paginate(-1)">Previous</button>
                            <button id="nextPage" onclick="paginate(1)">Next</button>
                        </div>
                    </div>
        
                <% } else { %>
                    <div class="col-lg-12 mb-3">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">No address</h5>
                            </div>
                            <div class="card-body">
                                <address>No address available</address>
                            </div>
                        </div>
                    </div>
                <% } %>
        
                <!-- Account & Shipping Options -->
                <div class="col-md-12 form-group">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="newaccount">
                        <label class="custom-control-label" for="newaccount">
                            <a href="/addNewaddress" class="text-decoration-none">Create a new address</a>
                        </label>
                    </div>
                </div>
            </div>
        </div><!-- Checkout End -->
<!-- Add/Edit Address Modal -->
<div class="modal fade" id="addressModal" tabindex="-1" role="dialog" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addressModalLabel">Add/Edit Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="addressForm">
                <div class="modal-body">
                    <!-- Address Fields -->
                    <div class="form-group">
                        <label for="addressType">Address Type</label>
                        <input type="text" class="form-control" id="addressType" required>
                    </div>
                    <div class="form-group">
                        <label for="name">Name</label>
                        <input type="text" class="form-control" id="name" required>
                    </div>
                    <div class="form-group">
                        <label for="city">City</label>
                        <input type="text" class="form-control" id="city" required>
                    </div>
                    <div class="form-group">
                        <label for="landMark">Landmark</label>
                        <input type="text" class="form-control" id="landMark" required>
                    </div>
                    <div class="form-group">
                        <label for="state">State</label>
                        <input type="text" class="form-control" id="state" required>
                    </div>
                    <div class="form-group">
                        <label for="pincode">Pincode</label>
                        <input type="text" class="form-control" id="pincode" required>
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone</label>
                        <input type="text" class="form-control" id="phone" required>
                    </div>
                    <div class="form-group">
                        <label for="altPhone">Alternate Phone</label>
                        <input type="text" class="form-control" id="altPhone" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Address</button>
                </div>
            </form>
        </div>
    </div>
</div>


            <!-- Right Column: Order Summary & Payment Methods -->
            <div class="col-lg-8">
            
                    <!-- Coupon Input Section -->
                    <div class="col-12">
                        <div class="input-group mb-1" style="border: 1px solid #ced4da; border-radius: 5px; width: 100%; margin-top: 10px;">
                            <input type="text" class="form-control" id="inputCoupon" placeholder="Paste Coupon Name"">

                          <div class="input-group-append">
                            <button class="btn btn-primary" id="applyButton" type="button" onclick="applyCoupon('<%= grandTotal %>')">Apply</button>
                          </div>
                        </div>
                        
                        <!-- Hidden input to track if coupon is applied -->
                        <input type="hidden" id="couponApplied" value="false">
                        <input type="hidden" id="couponId" value="" />
                        <div class="mb-25 pt-10">
                          <h5>Available Coupons</h5>
                        </div>
                        <ul>
                          <% if (Coupon && Coupon.length > 0) { %>
                          <% Coupon.forEach(coupon => { %>
                          <li>
                            <div class="coupon-card col-4">
                              <div class="coupon-details">
                                <span class="coupon-name"><%= coupon.name %></span><br>
                                <span>Discount: ₹<%= coupon.offerPrice %></span><br>
                                <span>Minimum Purchase: ₹<%= coupon.minimumPrice %></span>
                              </div>
                              <button onclick="useCoupon('<%= coupon.name %>')" id="useButton_<%= coupon.name %>" class="use-button">Use</button>
                              <button onclick="cancelCoupon('<%= coupon.name %>')" id="cancelButton_<%= coupon.name %>" class="cancel-button btn-danger" style="display: none;">Cancel</button>
                            </div>
                          </li>
                          <% }); %>
                          <% } else { %>
                          <h3>No coupons available</h3>
                          <% } %>
                        </ul>
                      </div>
                      
                    <!-- Order Details Section -->
                    <div class="card border-secondary mb-5">
                        <div class="card-header bg-secondary border-3">
                            <h4 class="font-weight-semi-bold m-0">Order Details</h4>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive order_table text-center mb-5">
                                <% if (cartItems && cartItems.length > 0) { %>
                                <table class="order-details-table">
                                    <thead>
                                        <tr>
                                            <th>Image</th>
                                            <th>Name</th>
                                            <th>Price</th>
                                            <th>Quantity</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% cartItems.forEach(item => { %>
                                        <tr>
                                            <td>
                                                <% if (item.productImages.length > 0) { %>
                                                <img src="/uploads/product-images/<%= item.productImages[0] %>" alt="<%= item.productName %>" width="50" height="50">
                                                <% } else { %>
                                                <img src="/uploads/default-image.jpg" alt="Default Image" width="50" height="50">
                                                <% } %>
                                            </td>
                                            <td><%= item.productName %></td>
                                            <td>₹<%= item.productPrice %></td>
                                            <td><%= item.quantity %></td>
                                            <td>₹<%= item.total %></td>
                                        </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                                <% } else { %>
                                <p>Your cart is empty. <a href="/cart">Go to Cart</a></p>
                                <% } %>
                            </div>
                            <div class="cart-summary">
                                <h6 class="font-weight-medium">Subtotal: <span id="subTotalDisplay">₹<%= grandTotal %></span></h6>
                                <h6 class="font-weight-medium">Shipping: <span id="shipping">₹<%= shippingCost %></span></h6>
                                <p>Discount: <span id="discount"><%= discount || 0 %></span></p>

                                <h6 class="font-weight-medium">Grand Total: <span class="price" id="total">₹<%= finalGrandTotal %></span></h6>
                            </div>
                        </div>
                    </div>
                
                    <!-- Payment Methods Section -->
                    <div class="card border-secondary mb-5">
                        <div class="card-header bg-secondary border-0">
                            <h4 class="font-weight-semi-bold m-0">Payment</h4>
                        </div>
                        <div class="card-body">
                            <h3>Select Payment Method</h3>
                            <div class="custome-radio ml-150">
                                <input class="form-check-input payment" type="radio" value="cod" name="payment_option" id="CashOnDelivery" checked>
                                <label class="form-check-label" for="CashOnDelivery">Cash on Delivery</label>
                            </div>
                            <div class="custome-radio ml-150">
                                <input class="form-check-input payment" type="radio" value="razorpay" name="payment_option" id="Razorpay">
                                <label class="form-check-label" for="Razorpay">Razorpay</label>
                            </div>
                        </div>
                        <div class="card-footer border-secondary bg-transparent">
                            <button type="button" class="btn btn-primary" onclick="placeOrder('<%= user._id %>', '<%= orderId %>')">Place Order</button>
                        </div>
                    </div>
                </div>
                
                        
                        <!-- Footer -->
                        <div class="container-fluid bg-secondary text-center py-4">
                            <p class="m-0 text-white">&copy; 2025 E-Shopper. All Rights Reserved.</p>
                        </div>
                        </div>
                        
                        <!-- Add jQuery from CDN -->
                        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
                        
                        <script>
                           document.addEventListener('DOMContentLoaded', () => {
                                updateShipping();
                                paginate(0); // Initialize pagination on page load
                            });
                        
                            function updateShipping() {
                                let total = parseFloat(document.getElementById('subTotalDisplay').textContent.replace('₹', ''));
                                let shippingCost = total > 1000 ? 0 : 100;
                                document.getElementById('shipping').textContent = `₹${shippingCost.toFixed(2)}`;
                                let grandTotal = total + shippingCost;
                                document.getElementById('total').textContent = `₹${grandTotal.toFixed(2)}`;
                            }
                            document.addEventListener('DOMContentLoaded', () => {
    updateShipping();
    paginate(0); // Initialize pagination on page load
});

function updateShipping() {
    let total = parseFloat(document.getElementById('subTotalDisplay').textContent.replace('₹', ''));
    let shippingCost = total > 5000 ? 0 : 100;
    document.getElementById('shipping').textContent = `₹${shippingCost.toFixed(2)}`;
    let grandTotal = total + shippingCost;
    document.getElementById('total').textContent = `₹${grandTotal.toFixed(2)}`;
}
function placeOrder(userId, orderId) {
    if (!orderId) {
        Swal.fire({
            title: 'Missing Order ID!',
            text: 'The order ID is required to proceed.',
            icon: 'error',
            timer: 3000,
        });
        return;
    }

    let selectedAddressId = $("input[name='selectedAddress']:checked").val();
    if (!selectedAddressId) {
        Swal.fire({
            title: 'No Address Found!',
            text: 'Please select your address.',
            icon: 'error',
            timer: 3000,
        });
        return;
    }

    let paymentMethod = $("input[name='payment_option']:checked").val();
    if (!paymentMethod) {
        Swal.fire({
            title: 'No Payment Method Selected!',
            text: 'Please select a payment method.',
            icon: 'error',
            timer: 3000,
        });
        return;
    }

    // Check if a coupon is applied
    const couponApplied = usedCoupon !== null; // Use the `usedCoupon` variable
    const couponName = usedCoupon || null; // If no coupon is used, send null

    const requestData = {
        userId: userId,
        orderId: orderId,
        addressId: selectedAddressId,
        payment: paymentMethod,
        couponApplied: couponApplied,
        couponName: couponName, // Include the coupon name
    };

    console.log("Request Data:", requestData); // Debugging log
    $.ajax({
    url: "/orderPlaced",
    method: "POST",
    contentType: "application/json",
    data: JSON.stringify(requestData),
    success: function (response) {
        if (paymentMethod === "razorpay") {
            let options = {
                key: "rzp_test_WcjmbBeSCVDL9b",
                amount: Math.round(response.razorPayOrder.finalAmount * 100), // Correct amount after discount and shipping
                currency: "INR",
                name: "FloraGems",
                description: "Order Payment",
                image: "https://www.dropbox.com/scl/fi/9zytl7wt67wkgl7p9s0zw/removal.ai-_f9e2b53c-dc7e-488a-a0da-fa14f2059a6a_Flora-Gems.png?rlkey=b8wmnqhmtg26gjyril91u3qkm&st=z9i26gci&dl=0",
                order_id: response.razorPayOrder.orderId,
                handler: function (payment) {
                    verifyPayment(response.razorPayOrder, payment, response.order._id, userId);
                },
                prefill: {
                    name: "Customer Name",
                    email: "customer@example.com",
                    contact: "9961618585",
                },
                theme: {
                    color: "#f8d0d0",
                },
            };
            let rzp1 = new Razorpay(options);
            rzp1.open();
        } else if (paymentMethod === "cod") {
            // Handle Cash on Delivery Order
            handleSuccessfulOrder(response.orderId, userId); // Ensure response.orderId is used here
        }
    },
    error: function (error) {
        console.error("AJAX Error:", error); // Log the error for debugging
        Swal.fire({
            title: 'Order Placement Failed!',
            text: 'An error occurred while placing your order. Please try again.',
            icon: 'error',
            timer: 5000,
        });
    },
});
}


function handleSuccessfulOrder(orderId, userId) {
    console.log("Order ID from server:", orderId); // Debugging log to check if orderId is correct

    if (!orderId) {
        Swal.fire({
            title: 'Error!',
            text: 'Order ID is missing. Please try again.',
            icon: 'error',
            timer: 3000,
        });
        return;
    }

    $.ajax({
        url: "/clearCart",
        method: "POST",
        data: { userId: userId },
        success: function () {
            Swal.fire({
                title: 'Order Placed Successfully!',
                text: 'Thank you for shopping with us!',
                icon: 'success',
                html: `
                    <div style="text-align: center;">
                        <h3>Thank You for Your Order!</h3>
                        <p>Your order has been confirmed. We will process it shortly.</p>
                        <a href="/" class="btn btn-primary" style="margin-top: 10px;">Continue Shopping</a>
                        <a href="/orderDetails?id=${orderId}" class="btn btn-secondary" style="margin-top: 10px;">View Order Details</a>
                    </div>
                `,
            }).then(() => {
                window.location.href = `/orderDetails?id=${orderId}`; // Pass the correct orderId
            });
        },
        error: function () {
            Swal.fire({
                title: 'Error Clearing Cart!',
                text: 'There was an issue clearing the cart. Please try again.',
                icon: 'error',
                timer: 5000,
            });
        },
    });
}

function verifyPayment(order, payment, orderId, userId) {
    $.ajax({
        url: '/verifyPayment',  // Ensure this matches your server route
        method: 'POST',
        contentType: 'application/json',  // Ensure the content type is set to application/json
        data: JSON.stringify({ order, payment }),  // Send the data as JSON
        success: function (response) {
            console.log("Payment Verification Response:", response);  // Log the response for debugging
            if (response.status) {
                // After payment verification is successful, confirm the order
                $.ajax({
                    url: '/paymentConfirm',
                    method: 'POST',
                    data: {
                        status: "Pending",  // Set the order status to "Pending" initially
                        orderId: orderId,   // Pass the orderId to confirm the order
                    },
                    success: function (confirmationResponse) {
                        console.log("Payment Confirmed:", confirmationResponse);

                        // Clear the cart after confirming payment
                        $.ajax({
                            url: "/clearCart",  // Ensure this matches your server route for clearing the cart
                            method: "POST",
                            data: { userId: userId },
                            success: function () {
                                console.log("Cart cleared successfully");

                                // Now, handle the successful order
                                handleSuccessfulOrder(orderId, userId);
                            },
                            error: function () {
                                Swal.fire({
                                    title: 'Error Clearing Cart!',
                                    text: 'There was an issue clearing the cart. Please try again.',
                                    icon: 'error',
                                    timer: 5000,
                                });
                            }
                        });
                    },
                    error: function (error) {
                        console.error("Error in confirming payment:", error);
                        Swal.fire({
                            title: 'Order Confirmation Failed!',
                            text: 'An error occurred while confirming your order. Please try again.',
                            icon: 'error',
                            timer: 5000,
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: 'Payment Verification Failed!',
                    text: 'The payment could not be verified. Please try again.',
                    icon: 'error',
                    timer: 5000,
                });
            }
        },
        error: function (error) {
            console.error("Error in payment verification:", error);  // Log the error for debugging
            Swal.fire({
                title: 'Payment Verification Error!',
                text: 'An error occurred while verifying the payment. Please try again.',
                icon: 'error',
                timer: 5000,
            });
        },
    });
}

                            function removeProduct(productId) {
                                if (!productId) {
                                    alert('Invalid product ID.');
                                    return;
                                }
                        
                                fetch(`/deleteItems?id=${productId}`, { method: 'GET' })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            alert('Product removed successfully!');
                                            location.reload();
                                        } else {
                                            alert(data.message || 'Failed to remove product.');
                                        }
                                    })
                                    .catch(error => console.error('Error removing product:', error));
                            }
                        
                            const addressesPerPage = 1;
                            let currentPage = 1;
                        
                            function paginate(direction) {
                                const allAddresses = document.querySelectorAll('#address-pagination .card');
                                const totalPages = Math.ceil(allAddresses.length / addressesPerPage);
                                currentPage += direction;
                        
                                if (currentPage < 1) currentPage = 1;
                                if (currentPage > totalPages) currentPage = totalPages;
                        
                                allAddresses.forEach((address, index) => {
                                    const start = (currentPage - 1) * addressesPerPage;
                                    const end = start + addressesPerPage;
                                    address.style.display = (index >= start && index < end) ? 'block' : 'none';
                                });
                        
                                document.getElementById('prevPage').style.display = currentPage === 1 ? 'none' : 'inline-block';
                                document.getElementById('nextPage').style.display = currentPage === totalPages ? 'none' : 'inline-block';
                            }

                             
        function showCouponDetails(couponName) {
            Swal.fire({
                title: 'Coupon Details',
                text: `${couponName}`,
                icon: 'info',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    copyToClipboard(couponName);
                }
            });
        }

        function copyToClipboard(text) {
            var tempInput = document.createElement('input');
            document.body.appendChild(tempInput);
            tempInput.value = text;

            tempInput.select();
            document.execCommand('copy');

            document.body.removeChild(tempInput);

            Swal.fire({
                title: 'Copied!',
                text: 'Coupon name has been copied to the clipboard.',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }

        let discount = 0;
        function applyCoupon(grandTotal) {
    const couponName = document.getElementById("inputCoupon")?.value.trim();

    if (!couponName) {
        Swal.fire({
            title: "Missing Coupon",
            text: "Please enter a coupon code to apply.",
            icon: "warning",
        });
        return;
    }

    $.ajax({
        url: "/applyCoupon",
        method: "POST",
        contentType: "application/json",
        data: JSON.stringify({ coupon: couponName, total: grandTotal }),
        success: function (response) {
            if (response.success) {
                Swal.fire({
                    title: "Coupon Applied!",
                    text: `Discount: ₹${response.offerPrice}`,
                    icon: "success",
                });

                // Update the DOM with the updated discount and total
                document.getElementById("discount").innerText = `₹${response.offerPrice}`;
                document.getElementById("total").innerText = `₹${response.finalGrandTotal.toLocaleString()}`;
            } else {
                Swal.fire({
                    title: "Invalid Coupon",
                    text: response.message,
                    icon: "error",
                });
            }
        },
        error: function (xhr, status, error) {
            console.error("Error applying coupon:", xhr.responseText);

            Swal.fire({
                title: "Error",
                text: "An unexpected error occurred. Please try again.",
                icon: "error",
            });
        },
    });
}


       var usedCoupon = null;
    const useCoupon = async (couponName) =>{
        disableOtherCoupons(couponName);
        copyToClipboard(couponName);
        document.getElementById("inputCoupon").value = couponName;
        document.getElementById('useButton_' + couponName).style.display = 'none';
        document.getElementById('cancelButton_' + couponName).style.display = 'block';
        usedCoupon = couponName;
    }

   const cancelCoupon = async (couponName) =>{
        enableAllCoupons();
        document.getElementById('useButton_' + couponName).style.display = 'block';
        document.getElementById('cancelButton_' + couponName).style.display = 'none';
        usedCoupon = null;
        window.location.reload();
    }
    function disableOtherCoupons(excludeCoupon) {
        var couponButtons = document.querySelectorAll('.use-button');
        couponButtons.forEach(function (button) {
            var couponName = button.id.replace('useButton_', '');
            if (couponName !== excludeCoupon) {
                button.disabled = true;
            }
        });
    }

    function enableAllCoupons() {
        var couponButtons = document.querySelectorAll('.use-button');
        couponButtons.forEach(function (button) {
            button.disabled = false;
        });
    }

                        </script>
                        </body>
                        </html>
                        