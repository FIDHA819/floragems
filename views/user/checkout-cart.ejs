<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Checkout page</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="Free HTML Templates" name="keywords">
    <meta content="Free HTML Templates" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="css/style.css" rel="stylesheet">
    <script> $(document).ready(function () {
        // Handle the checkbox toggle for shipping address
        $('#shipto').change(function () {
            if ($(this).is(':checked')) {
                $('#shipping-address').collapse('show');
            } else {
                $('#shipping-address').collapse('hide');
            }
        });
    });
</script>
    <style>
        /* General Styles for Cleaner Writing */
body {
    font-family: 'Arial', sans-serif;
    line-height: 1.6;
}

h4, h5, h3 {
    margin-bottom: 10px;
    font-weight: bold;
    color: #333;
}

p, ul, li {
    margin: 0;
    padding: 0;
}

table {
    width: 100%;
    margin-top: 15px;
    border-collapse: collapse;
}

th, td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
    font-size: 14px;
    color: #555;
}

th {
    background-color: #f4f4f4;
    font-weight: bold;
}

table td span {
    font-weight: bold;
}

table td img {
    max-width: 60px;
    height: auto;
}

/* Styling for Coupon Section */
#inputCoupon {
    padding: 10px;
    font-size: 14px;
}

#applyButton {
    padding: 10px 15px;
    font-size: 14px;
}

.coupon-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.coupon-details {
    font-size: 14px;
}

.coupon-name {
    font-weight: bold;
}

.use-button, .cancel-button {
    font-size: 14px;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
}

.use-button {
    background-color: #28a745;
    color: #fff;
    border: none;
}

.use-button:hover {
    background-color: #218838;
}

.cancel-button {
    background-color: #dc3545;
    color: #fff;
    border: none;
    display: none;
}

.cancel-button:hover {
    background-color: #c82333;
}

/* Table Styling */
.order-details-table td,
.order-details-table th {
    padding: 12px;
    text-align: left;
}

.order-details-table tr:nth-child(even) {
    background-color: #f9f9f9;
}

.order-details-table tr:hover {
    background-color: #f1f1f1;
}

/* Delete Button Styling */
.order-details-table td .fi-rs-trash {
    color: #dc3545;
    font-size: 18px;
    cursor: pointer;
    transition: color 0.3s ease;
}

.order-details-table td .fi-rs-trash:hover {
    color: #c82333;
}

/* Payment Method Section */
.custom-control-label {
    font-size: 14px;
    color: #333;
}

.custom-control-input:checked ~ .custom-control-label {
    font-weight: bold;
}

.card-body .form-group {
    margin-bottom: 15px;
}

.card-footer .btn {
    font-size: 16px;
    padding: 12px;
    background-color: #007bff;
    color: #fff;
    border-radius: 5px;
    width: 100%;
    text-align: center;
}

.card-footer .btn:hover {
    background-color: #0056b3;
}

/* Adjusting for Order Summary and Payment Method */
.table tbody tr {
    margin-bottom: 15px;
}

.table td, .table th {
    padding: 15px;
}

.table th {
    background-color: #f7f7f7;
    font-weight: bold;
}

.table td {
    font-size: 16px;
    color: #555;
}

.table td span {
    font-weight: bold;
}

/* Button to Place Order */
button[type="button"].btn {
    background-color: #007bff;
    color: #fff;
    padding: 12px 20px;
    border-radius: 5px;
    font-size: 16px;
    border: none;
}

button[type="button"].btn:hover {
    background-color: #0056b3;
}

    </style>
</head>

<body>

<!-- 
<- Page Header Start --> 
    <div class="container-fluid bg-secondary mb-5">
        <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
            <h1 class="font-weight-semi-bold text-uppercase mb-3">Checkout</h1>
            <div class="d-inline-flex">
                <p class="m-0"><a href="">Home</a></p>
                <p class="m-0 px-2">-</p>
                <p class="m-0">Checkout</p>
            </div>
        </div>
    </div>
    <!-- Page Header End -->

    <!-- Checkout Start -->
    <div class="container-fluid pt-5">
        <div class="row px-xl-5">
            <!-- Left Column: Billing and Shipping Address Forms -->
            <div class="col-lg-4">
                <div class="mb-4">
                    <% if (locals.userAddress && userAddress.address.length > 0) { %>
                    <!-- Show Latest Address -->
                    <div class="col-lg-12">
                        <div class="card mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" id="addressRadio<%= userAddress.address[0]._id %>" name="selectedAddress" value="<%= userAddress.address[0]._id %>">
                                <label class="form-check-label" for="addressRadio<%= userAddress.address[0]._id %>">Select Address</label>
                            </div>
                            <div class="card-header">
                                <h5 class="mb-0"><%= userAddress.address[0].addressType %></h5>
                            </div>
                            <div class="card-body">
                                <address>
                                    <%= userAddress.address[0].name %><br />
                                    <%= userAddress.address[0].city %>,<br />
                                    <%= userAddress.address[0].landMark %><br />
                                    <%= userAddress.address[0].state %>
                                </address>
                                <p><%= userAddress.address[0].pincode %></p>
                                <p><%= userAddress.address[0].phone %></p>
                                <p><%= userAddress.address[0].altPhone %></p>
                                <div class="d-flex justify-content-between">
                                    <a href="/editAddress?id=<%= userAddress.address[0]._id %>" class="btn btn-small">Edit</a>
                                    <a href="/deleteAddress?id=<%= userAddress.address[0]._id %>" class="btn btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Show Other Addresses in Collapsible Section -->
                    <div class="col-md-12 form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="shipto" data-toggle="collapse" data-target="#shipping-address">
                            <label class="custom-control-label" for="shipto">Ship to a different address</label>
                        </div>
                    </div>

                    <div id="shipping-address" class="collapse">
                        <% userAddress.address.slice(1).forEach((address) => { %>
                        <div class="col-lg-12">
                            <div class="card mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" id="addressRadio<%= address._id %>" name="selectedAddress" value="<%= address._id %>">
                                    <label class="form-check-label" for="addressRadio<%= address._id %>">Select Address</label>
                                </div>
                                <div class="card-header">
                                    <h5 class="mb-0"><%= address.addressType %></h5>
                                </div>
                                <div class="card-body">
                                    <address>
                                        <%= address.name %><br />
                                        <%= address.city %>,<br />
                                        <%= address.landMark %><br />
                                        <%= address.state %>
                                    </address>
                                    <p><%= address.pincode %></p>
                                    <p><%= address.phone %></p>
                                    <p><%= address.altPhone %></p>
                                    <div class="d-flex justify-content-between">
                                        <a href="/editAddress?id=<%= address._id %>" class="btn btn-small">Edit</a>
                                        <a href="/deleteAddress?id=<%= address._id %>" class="btn btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <% }) %>
                    </div>
                    <% } else { %>
                    <div class="col-lg-12 mb-3">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">No address</h5>
                            </div>
                            <div class="card-body">
                                <address>No address available</address>
                            </div>
                        </div>
                    </div>
                    <% } %>

                    <!-- Account & Shipping Options -->
                    <div class="col-md-12 form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="newaccount">
                            <label class="custom-control-label" for="newaccount">
                                <a href="/addNewaddress" class="text-decoration-none">Create a new address</a>
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column: Order Summary & Payment Methods -->
            <div class="col-lg-8">
                <!-- Coupon Input Section -->
                <div class="col-12">
                    <div class="input-group mb-1" style="border: 1px solid #ced4da; border-radius: 5px; width: 100%; margin-top: 10px;">
                        <input type="text" class="form-control" id="inputCoupon" placeholder="Paste Coupon Name">
                        <div class="input-group-append">
                            <button class="btn btn-primary" id="applyButton" type="button" onclick="applyCoupon('<%= grandTotal %>')">Apply</button>
                        </div>
                    </div>
                    <div class="mb-25 pt-10">
                        <h5>Available Coupons</h5>
                    </div>
                    <ul>
                        <% if (locals.Coupon) { %>
                        <% for (let i = 0; i < Coupon.length; i++) { %>
                        <li>
                            <div class="coupon-card col-4">
                                <div class="coupon-details">
                                    <span class="coupon-name"><%= Coupon[i].name %></span><br>
                                </div>
                                <button onclick="useCoupon('<%= Coupon[i].name %>')" id="useButton_<%= Coupon[i].name %>" class="use-button">Use</button>
                                <button onclick="cancelCoupon('<%= Coupon[i].name %>')" id="cancelButton_<%= Coupon[i].name %>" class="cancel-button btn-danger" style="display: none;">Cancel</button>
                            </div>
                        </li>
                        <% } %>
                        <% } else { %>
                        <h3>No coupons available</h3>
                        <% } %>
                    </ul>
                </div>

                <!-- Order Details Section -->
                <div class="card border-secondary mb-5">
                    <div class="card-header bg-secondary border-3">
                        <h4 class="font-weight-semi-bold m-0">Order Details</h4>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive order_table text-center mb-5">
                            <% if (cartItems && cartItems.length > 0) { %>
                            <table class="order-details-table">
                                <thead>
                                    <tr>
                                      
                                       
                                        <th>Image</th>
                                        <th>Name</th>
                                        <th>Product</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th>Delete</th>
                                    </tr>
                                </thead>
                                <tbody>
                                        <% cartItems.forEach((item, index) => { %>
                                    <tr>
                                     
<td>
                                            <% if (item.productImages.length > 0) { %>
                                                <img src="/uploads/product-images/<%= item.productImages[0] %>" alt="<%= item.productName %>" width="50" height="50">
                                            <% } %></td>
                                            <td> <h5><a href="cart"><%= item.productName %></a></h5></td>
                                        <td>₹<%= item.productPrice %></td>
                                        <td><%= item.quantity %></td>
                                        <td>₹<%= item.total %></td>
                                        <td><button onclick="removeProduct('<%= item.productId %>')">Remove</button></td>
                                    </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                            <% } else { %>
                            <p>Your cart is empty. <a href="/shop">Start shopping</a></p>
                            <% } %>
                        </div>

                        <div class="cart-summary">
                            <h6 class="font-weight-medium">Subtotal: ₹<%= grandTotal %></h6>
                            <h6 class="font-weight-medium">Shipping: ₹<%= shippingCost %></h6>
                            <h6 class="font-weight-medium">Grand Total: ₹<%= Total %></h6>
                        </div>

                        <!-- Payment Methods Section -->
                        <div class="card border-secondary mb-5">
                            <div class="card-header bg-secondary border-0">
                                <h4 class="font-weight-semi-bold m-0">Payment</h4>
                            </div>
                            <div class="card-body">
                                <div>
                                    <h3>Select Payment Method</h3>
                                    <label>
                                        <input type="radio" name="payment_option" value="cod" checked> Cash on Delivery (COD)
                                    </label>
                                </div>
                            </div>
                            <div class="card-footer border-secondary bg-transparent">
                                <button type="button" class="btn btn-primary" onclick="placeOrder('<%= user._id %>')">Place Order</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Checkout End -->

    <!-- Footer -->
    <div class="container-fluid bg-secondary text-center py-4">
        <p class="m-0 text-white">&copy; 2025 E-Shopper. All Rights Reserved.</p>
    </div>



    <script>
        document.addEventListener('DOMContentLoaded', () => {
    updateShipping(); // Initial calculation on page load
});

// Call this function again if cart updates dynamically (e.g., on product addition/removal).


function updateShipping() {
    // Get the subtotal
    let total = parseFloat(
        document.getElementById('subTotalDisplay').textContent.replace('₹', '')
    );

    // Determine shipping cost (₹0 for orders over ₹5000, otherwise ₹100)
    let shippingCost = total > 5000 ? 0 : 100;

    // Update the shipping cost in the table
    document.getElementById('shipping').textContent = `₹${shippingCost.toFixed(2)}`;

    // Calculate the grand total
    let grandTotal = total + shippingCost;

    // Update the total in the table
    document.getElementById('total').textContent = `₹${grandTotal.toFixed(2)}`;
}



        async function placeOrder(userId, productId) {
            let address = $("input[name='selectedAddress']:checked").val();
            let payment = $("input[name='payment_option']:checked").val();

            const sum = document.getElementById("totalValue").textContent;
            const numericValue = parseInt(sum.replace(/[^\d.]/g, ''));
            console.log(numericValue);
            

            if (!payment) {
                Swal.fire({
                    title: 'NO PAYMENT FOUND!',
                    text: 'Please select your Payment.',
                    icon: 'error',
                    timer: 3000,
                });
            } else if (!address) {
                Swal.fire({
                    title: 'NO ADDRESS FOUND!',
                    text: 'Please select your address.',
                    icon: 'error',
                    timer: 3000,
                });
            } else if(payment === "cod" && numericValue > 1000){
                Swal.fire({
            title: 'COD Not Allowed!',
            text: 'Orders above ₹1000 are not allowed for Cash on Delivery (COD).',
            icon: 'error',
            timer: 3000,
        });
            }else {
                $.ajax({
                    url: '/orderPlaced',
                    method: 'POST',
                    data:{
                        totalPrice: numericValue,
                        createdOn: new Date().getTime(),
                        date: new Date(),
                        addressId: address,
                        payment: payment,
                        discount : discount
                    },
                    success: function (response) {
                        let orderId = response.order._id
                        if (response.method === "cod") {
                        Swal.fire({
                            title: "Order success",
                            text: "order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                let orderId = response.order._id
                                location.href =`/orderDetails?id=${orderId}`;
                            } else if (result.dismiss === "cancel") {
                                location.href = '/'
                            }
                        });
                    
                        }else if (response.method === "wallet") {
                            if(response.payment===true){
                        Swal.fire({
                            title: "Order success",
                            text: "order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                let orderId = response.order._id
                                location.href = `/orderDetails?id=${orderId}`;
                            } else if (result.dismiss === "cancel") {
                                location.href = '/'
                            }
                        });
                    }else {
    Swal.fire({
        title: "Order failed",
        text: "Wallet amount is not enough",
        icon: "error",
        showConfirmButton: true,
    }).then(function(result) {
        if (result.value) {
            location.href = '/';
        }
    });
}

                        }                 
                            else if (response.method === "razorpay") {
                           let orderAmount=Math.round(numericValue*100);
                            var options = {
                                "key": "rzp_test_vWkG4lrwiDnQ0g",
                                "amount": orderAmount,
                                "currency": "INR",
                                "name": "Trend Setter",
                                "description": "Test Transaction",
                                "image": "https://firebasestorage.googleapis.com/v0/b/ecommerce-397a7.appspot.com/o/logo.jpg?alt=media&token=07b6be19-1ce8-4797-a3a0-f0eaeaafedad",
                                "order_id": response.razorPayOrder.id,
                                "handler": function (status) {
                                    verifyPayment(response.razorPayOrder, status,response.order._id);
                                },
                                "prefill": {
                                    "name": "Customer Name",
                                    "email": "customer@example.com",
                                    "contact": "9961618585"
                                },

                                "theme": {
                                    "color": "#3399cc"
                                }
                            }
                            var rzp1 = new Razorpay(options);
                            rzp1.open();

                        } else {
                            Swal.fire({
                                title: 'Error Occured',
                                text: "Can't process order error occured",
                                icon: 'fail',
                                timer: 5000
                            })
                        }
                    },
                });
            }
        }

        function verifyPayment(order, payment,orderId) {
            $.ajax({
                url: '/verifyPayment',
                method: 'post',
                data: {
                    order,
                    payment
                }, success: (response) => {
                    if (response.status) {
                        $.ajax({
                            url:'/paymentConfirm',
                            method:'post',
                            data :{
                                status:"Pending",
                                orderId
                            },
                            success:(response)=>{
                            }
                        })
                        Swal.fire({
                            title: "Order success",
                            text: "order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                console.log("I am success");
                                var orderDetailsUrl = `/orderDetails?id=${orderId}`;
            location.href = orderDetailsUrl;
                            } else if (result.dismiss === "cancel") {
                                console.log("Nopppp");
                                location.href = '/'
                            }
                        });
                    }

                }
            })
        }
        
        function showCouponDetails(couponName) {
            Swal.fire({
                title: 'Coupon Details',
                text: `${couponName}`,
                icon: 'info',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    copyToClipboard(couponName);
                }
            });
        }

        function copyToClipboard(text) {
            var tempInput = document.createElement('input');
            document.body.appendChild(tempInput);
            tempInput.value = text;

            tempInput.select();
            document.execCommand('copy');

            document.body.removeChild(tempInput);

            Swal.fire({
                title: 'Copied!',
                text: 'Coupon name has been copied to the clipboard.',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }

        let discount = 0;



 const applyCoupon = async (totalAmount) => {
  const couponName = document.getElementById("inputCoupon").value.trim();
  if (!couponName) {
    Swal.fire({ icon: 'error', title: 'Error', text: 'Please enter a coupon code.' });
    return;
  }

  try {
    const response = await fetch('/applyCoupon', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ coupon: couponName, total: totalAmount }),
    });

    const data = await response.json();
    if (data.success) {
      Swal.fire({ icon: 'success', title: 'Success', text: `Coupon Discount ${data.offerPrice} Applied` });
      document.getElementById("totalValue").innerText = `₹${data.gt}`;
      document.getElementById("discount").innerText = data.offerPrice;
      document.getElementById("inputCoupon").value = "";
      discount = data.offerPrice;
    } else {
      Swal.fire({ icon: 'error', title: 'Error', text: data.message });
    }
  } catch (error) {
    console.error('Error applying coupon:', error);
    Swal.fire({ icon: 'error', title: 'Error', text: 'Failed to apply coupon.' });
  }
};


 
    
        var usedCoupon = null;
    const useCoupon = async (couponName) =>{
        disableOtherCoupons(couponName);
        copyToClipboard(couponName);
        document.getElementById("inputCoupon").value = couponName;
        document.getElementById('useButton_' + couponName).style.display = 'none';
        document.getElementById('cancelButton_' + couponName).style.display = 'block';
        usedCoupon = couponName;
    }

   const cancelCoupon = async (couponName) =>{
        enableAllCoupons();
        document.getElementById('useButton_' + couponName).style.display = 'block';
        document.getElementById('cancelButton_' + couponName).style.display = 'none';
        usedCoupon = null;
        window.location.reload();
    }
    function disableOtherCoupons(excludeCoupon) {
        var couponButtons = document.querySelectorAll('.use-button');
        couponButtons.forEach(function (button) {
            var couponName = button.id.replace('useButton_', '');
            if (couponName !== excludeCoupon) {
                button.disabled = true;
            }
        });
    }

    function enableAllCoupons() {
        var couponButtons = document.querySelectorAll('.use-button');
        couponButtons.forEach(function (button) {
            button.disabled = false;
        });
    }

    function removeProduct(productId) {
  if (!productId) {
    console.error('Invalid productId:', productId);
    alert('Invalid product ID.');
    return;
  }

  console.log(`Attempting to remove product with ID: ${productId}`);

  fetch(`/deleteItems?id=${productId}`, {
    method: 'GET',
  })
    .then((response) => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then((data) => {
      if (data.success) {
        alert('Product removed successfully!');
        location.reload();
      } else {
        alert(data.message || 'Failed to remove product.');
      }
    })
    .catch((error) => {
      console.error('Error removing product:', error);
    });
}


    </script>

</body>

</html>