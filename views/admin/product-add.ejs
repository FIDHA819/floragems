<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
    
    
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            padding: 20px;
        }

        .content-main {
            max-width: 1200px;
            margin: 0 auto;
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
        }

        .form-control, .form-select {
            border-radius: 8px;
            padding: 12px;
            border: 1px solid #dee2e6;
            width: 100%;
        }

        .image-upload-section {
            background: #fff;
            padding: 20px;
            border-radius: 12px;
        }

        .image-preview {
            width: 100%;
            max-height: 200px;
            object-fit: contain;
            margin: 10px 0;
        }

        .btn-publish {
            background-color: #28a745;
            color: white;
            padding: 12px 30px;
            border-radius: 8px;
            border: none;
            font-weight: 600;
            margin-top: 20px;
        }

        .error-message {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .thumbnails-container {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin: 10px 0;
        }

        .thumbnail {
            width: 80px;
            height: 80px;
            border-radius: 8px;
            overflow: hidden;
            position: relative;
        }

        .thumbnail img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    </style>
</head>
<body>
    <div class="content-main">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <h2 class="mb-4">Add New Product</h2>
                
                <form method="POST" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                    <div class="card">
                        <div class="card-body">
                            <!-- Basic Information -->
                            <div class="form-group">
                                <label class="form-label">Product Name</label>
                                <input type="text" name="productName" class="form-control" placeholder="Enter product name">
                                <div id="productName-error" class="error-message"></div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Brand</label>
                                        <select class="form-select" name="brand">
                                            <% for (let brand of brands) { %>
                                                <option value="<%= brand.brandName %>"><%= brand.brandName %></option>
                                            <% } %>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Metal Type</label>
                                        <select name="metalType" class="form-select">
                                            <option value="" disabled selected>Select metal type</option>
                                            <option value="Gold">Gold</option>
                                            <option value="Diamond">Diamond</option>
                                            <option value="Silver">Silver</option>
                                            <option value="Platinum">Platinum</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <!-- Description -->
                            <div class="form-group">
                                <label class="form-label">Description</label>
                                <textarea name="description" class="form-control" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <!-- Pricing -->
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Regular Price (₹)</label>
                                        <input type="text" name="regularPrice" class="form-control">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Sale Price (₹)</label>
                                        <input type="text" name="salePrice" class="form-control">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Quantity</label>
                                        <input type="number" name="quantity" class="form-control">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Image Upload Section -->
                    <div class="card">
                        <div class="card-body">
                            <h4 class="mb-4">Product Images</h4>
                            <div id="addedImagesContainer" class="thumbnails-container"></div>
                            
                            <div class="row">
                                <% for(let i = 1; i <= 4; i++) { %>
                                    <div class="col-md-6 mb-4">
                                        <div class="image-upload-section">
                                            <input type="file" id="input<%= i %>" name="images" 
                                                   class="form-control" accept="image/png, image/jpeg, image/webp"
                                                   onchange="viewImage<%= i %>(event), viewImage(event, <%= i %>)">
                                            <img src="" id="imgView<%= i %>" class="image-preview">
                                            <div id="image-error<%= i %>" class="error-message"></div>
                                            <div class="image-cropper" style="display:none;">
                                                <img src="" id="croppedImg<%= i %>" width="250" height="250">
                                                <button type="button" id="saveButton<%= i %>" class="btn btn-primary btn-sm mt-2">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>

                    <button type="submit" class="btn-publish">Publish Product</button>
                </form>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>

function validateAndSubmit(){
if(validateForm()){
document.forms[0].submit();
console.log("jhkj")
}
}


function viewImage1(event){
document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0])
}


function viewImage2(event){
document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0])
}

function viewImage3(event){
document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0])
}

function viewImage4(event){
document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0])
}

//for processing image - crop ,changing file name
function viewImage(event,index){
let input = event.target;


    
let reader = new FileReader();
reader.onload = function (){

 let dataURL = reader.result;
 let image = document.getElementById("imgView"+index)

 image.src = dataURL;
 let cropper = new Cropper(image,{
     aspectRatio:1,
     viewMode:1,
     guides:true,
     background:false,
     autoCropArea:1,
     Zoomable:true
 })
 let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
 cropperContainer.style.display = "block";
 let saveButton = document.querySelector('#saveButton'+index)
                saveButton.addEventListener('click',async function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.getElementById("croppedImg"+index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg',1.0)

                
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;

                    await croppedCanvas.toBlob(blob=>{
                        let input = document.getElementById('input'+index)
                        let imgFile = new File([blob],fileName,blob)
                        const fileList = new DatTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files

                    })
                    cropperContainer.style.display= "none";
                    cropper.destroy();
                    
                })
            }
            reader.readAsDataURL(input.files[0]);
          }


          const selectedImages = [];
document.getElementById('input1').addEventListener('change', handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;

    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);

        const thumbnail = document.createElement('div');
        thumbnail.classList.add('thumbnail');

        const img = document.createElement('img');
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";

        const removeIcon = document.createElement('span');
        removeIcon.classList.add('remove-icon');
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener('click', function () {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
            updateFileInput();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
    updateFileInput();
}

function updateFileInput() {
    const input = document.getElementById('input1');
    const fileList = new DataTransfer();
    selectedImages.forEach(file => {
        fileList.items.add(file);
    });
    input.files = fileList.files;
}
console.log(document.getElementById('input1').files);



function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const quantity = document.getElementsByName('quantity')[0].value;
    let isValid = true;

    // Validation for other fields
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }
    
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    if (parseInt(quantity) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (parseFloat(price) <= parseFloat(saleprice)) {
        displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
    }

    // Image validation for input1 to input4
    let imageCount = 0;
    for (let i = 1; i <= 4; i++) {
        const imageInput = document.getElementById('input' + i);
        if (imageInput.files.length > 0) {
            const file = imageInput.files[0];
            const fileType = file.type;
            if (!['image/png', 'image/jpeg', 'image/webp'].includes(fileType)) {
                displayErrorMessage(`image-error${i}`, 'Please select a valid image format (PNG, JPEG, WEBP).');
                isValid = false;
            } else {
                imageCount++;
            }
        } else {
            displayErrorMessage(`image-error${i}`, 'Please select an image.');
            isValid = false;
        }
    }

    if (imageCount === 0) {
        displayErrorMessage('images-error', 'Please select at least one image.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}


          

</script>
     
<%- include("../../views/partials/admin/footer") %>



