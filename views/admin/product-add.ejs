<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }

        .content-main {
            padding: 15px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .content-header h2 {
            font-size: 22px;
            font-weight: bold;
            color: #333;
            text-align: center;
        }

        .card {
            border: none;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 800px;
        }

        .card-body {
            padding: 15px;
        }

        .form-label {
            font-weight: bold;
            color: #555;
        }

        .form-control,
        .form-select {
            border-radius: 6px;
            padding: 8px;
            font-size: 14px;
            border: 1px solid #ccc;
        }

        .form-control:focus,
        .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 4px rgba(0, 123, 255, 0.2);
        }

        .btn {
            background-color: #007bff;
            color: #fff;
            font-size: 14px;
            border-radius: 6px;
            padding: 8px 16px;
            transition: background-color 0.3s;
            width: 100%;
        }

        .btn:hover {
            background-color: #0056b3;
        }

        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 8px;
        }

        .thumbnail {
            width: 70px;
            height: 70px;
            border: 1px solid #ccc;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f5f5f5;
        }

        .thumbnail img {
            max-width: 100%;
            max-height: 100%;
        }

        .image-cropper {
            display: none;
            margin-top: 10px;
        }

        img {
            max-width: 100%;
            height: auto;
            display: block;
        }

        .row {
            margin: 0;
            padding: 0;
        }

        .mb-4 {
            margin-bottom: 10px !important;
        }

        .d-flex {
            display: flex;
            flex-wrap: wrap;
        }

        button[type="submit"],
        .btn-md {
            background-color: #28a745;
            color: white;
            padding: 8px 14px;
            font-size: 14px;
            width: 100%;
        }

        button[type="submit"]:hover,
        .btn-md:hover {
            background-color: #218838;
        }

        @media (max-width: 768px) {
            .card {
                width: 100%;
                max-width: 100%;
            }

            .content-main {
                padding: 10px;
            }

            .form-control,
            .form-select {
                font-size: 12px;
                padding: 6px;
            }

            .btn {
                font-size: 12px;
                padding: 6px;
            }
        }
    </style>
</head>

<section class="content-main">
    <div class="content-header">
        <h2>Add New Product</h2>
    </div>
    <div class="card">
        <div class="card-body">
            <form method="POST" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                <div class="mb-4">
                    <label for="product_name" class="form-label">Product Name</label>
                    <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                    <div id="productName-error" class="error-message"></div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Brand</label>
                    <select class="form-select border" name="brand">
                        <% for (let i = 0; i < brand.length; i++) { %>
                            <option value="<%= brand[i].brandName %>">
                                <%= brand[i].brandName %>
                            </option>
                        <% } %>
                    </select>
                    <div id="brand-error" class="error-message"></div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Full description</label>
                    <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="2"></textarea>
                    <div id="description-error" class="error-message"></div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Metal Type</label>
                    <select name="metalType" class="form-select border">
                        <option value="" disabled selected>Select a metal</option>
                        <option value="Gold">Gold</option>
                        <option value="Diamond">Diamond</option>
                        <option value="Silver">Silver</option>
                        <option value="Platinum">Platinum</option>
                        <option value="Other">Other</option>
                    </select>
                    <div id="metalType-error" class="error-message"></div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mb-4">
                        <label class="form-label">Regular price (₹)</label>
                        <input type="text" name="regularPrice" class="form-control border">
                        <div id="regularPrice-error" class="error-message"></div>
                    </div>
                    <div class="col-lg-6 mb-4">
                        <label class="form-label">Sale price (₹)</label>
                        <input type="text" name="salePrice" class="form-control border">
                        <div id="salePrice-error" class="error-message"></div>
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Category</label>
                    <select class="form-select border" name="category">
                        <% for (let i = 0; i < cat.length; i++) { %>
                            <option value="<%= cat[i].name %>">
                                <%= cat[i].name %>
                            </option>
                        <% } %>
                    </select>
                    <div id="category-error" class="error-message"></div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Choose images</label>
                    <input class="form-control" type="file" name="images" accept="image/png, image/jpeg, image/webp">
                    <div id="image-error" class="error-message"></div>
                </div>

                <div>
                    <button class="btn btn-md rounded font-sm hover-up" type="submit">Publish</button>
                </div>
            </form>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>

function validateAndSubmit(){
if(validateForm()){
document.forms[0].submit();
console.log("jhkj")
}
}


function viewImage1(event){
document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0])
}


function viewImage2(event){
document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0])
}

function viewImage3(event){
document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0])
}

function viewImage4(event){
document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0])
}

//for processing image - crop ,changing file name
function viewImage(event,index){
let input = event.target;


    
let reader = new FileReader();
reader.onload = function (){

 let dataURL = reader.result;
 let image = document.getElementById("imgView"+index)

 image.src = dataURL;
 let cropper = new Cropper(image,{
     aspectRatio:1,
     viewMode:1,
     guides:true,
     background:false,
     autoCropArea:1,
     Zoomable:true
 })
 let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
 cropperContainer.style.display = "block";
 let saveButton = document.querySelector('#saveButton'+index)
                saveButton.addEventListener('click',async function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.getElementById("croppedImg"+index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg',1.0)

                
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;

                    await croppedCanvas.toBlob(blob=>{
                        let input = document.getElementById('input'+index)
                        let imgFile = new File([blob],fileName,blob)
                        const fileList = new DatTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files

                    })
                    cropperContainer.style.display= "none";
                    cropper.destroy();
                    
                })
            }
            reader.readAsDataURL(input.files[0]);
          }


          const selectedImages = [];
document.getElementById('input1').addEventListener('change', handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;

    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);

        const thumbnail = document.createElement('div');
        thumbnail.classList.add('thumbnail');

        const img = document.createElement('img');
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";

        const removeIcon = document.createElement('span');
        removeIcon.classList.add('remove-icon');
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener('click', function () {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
            updateFileInput();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
    updateFileInput();
}

function updateFileInput() {
    const input = document.getElementById('input1');
    const fileList = new DataTransfer();
    selectedImages.forEach(file => {
        fileList.items.add(file);
    });
    input.files = fileList.files;
}
console.log(document.getElementById('input1').files);



function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const quantity = document.getElementsByName('quantity')[0].value;
    let isValid = true;

    // Validation for other fields
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }
    
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    if (parseInt(quantity) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (parseFloat(price) <= parseFloat(saleprice)) {
        displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
    }

    // Image validation for input1 to input4
    let imageCount = 0;
    for (let i = 1; i <= 4; i++) {
        const imageInput = document.getElementById('input' + i);
        if (imageInput.files.length > 0) {
            const file = imageInput.files[0];
            const fileType = file.type;
            if (!['image/png', 'image/jpeg', 'image/webp'].includes(fileType)) {
                displayErrorMessage(`image-error${i}`, 'Please select a valid image format (PNG, JPEG, WEBP).');
                isValid = false;
            } else {
                imageCount++;
            }
        } else {
            displayErrorMessage(`image-error${i}`, 'Please select an image.');
            isValid = false;
        }
    }

    if (imageCount === 0) {
        displayErrorMessage('images-error', 'Please select at least one image.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}


          

</script>
     
<%- include("../../views/partials/admin/footer") %>



